{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","aboutus","onClick","toggleMode","htmlFor","defaultProps","Textform","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newtext","toUpperCase","showalert","toLowerCase","split","length","Alert","alert","role","word","lower","charAt","slice","captalized","msg","App","setmode","setalert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9f477b12.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n          <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a> \r\n              </li>\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link\" to=\"/about\">{props.aboutus}</Link> */}\r\n              <a className=\"nav-link\" href=\"/about\">{props.aboutus}</a> \r\n              </li>\r\n             \r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n            </form> */}\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">enable dark mode</label>\r\n</div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\nNavbar.propTypes  = {title : PropTypes.string,\r\n    aboutus : PropTypes.string,\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'set title',\r\n    aboutus:'set about us'\r\n  }","import React,{ useState } from 'react'\r\n  \r\n  \r\n\r\nexport default function Textform(props) {\r\n    const [text, setText] = useState('Enter text here');\r\n\r\n    const handleOnchange = (event) =>{\r\n        \r\n        setText(event.target.value);\r\n\r\n    }\r\n\r\n    const handelUpclick= () =>{\r\n        \r\n        let newtext= text.toUpperCase()\r\n\r\n        setText(newtext)\r\n        props.showalert(\"converted to uppercase\",\"success\")\r\n    }\r\n    const handelClearclick= () =>{\r\n        \r\n        let newtext= ''\r\n\r\n        setText(newtext)\r\n    }\r\n    const handelLoclick= () =>{\r\n        \r\n        let newtext= text.toLowerCase()\r\n\r\n        setText(newtext)\r\n        props.showalert(\"converted to lowercase\",\"success\")\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n            \r\n\r\n            <h1>{props.heading}</h1>\r\n         \r\n<div className=\"mb-3\">\r\n\r\n  <textarea className=\"form-control\" value={text} onChange={handleOnchange} style={{backgroundColor:props.mode==='dark'?'green':'white', color:props.mode==='dark'?'white':'black'}} id=\"mybox\" rows=\"10\"></textarea>\r\n</div> \r\n<button className=\"btn btn-primary  mx-2 \" onClick={handelUpclick}>covert to upper case</button>\r\n<button className=\"btn btn-primary   mx-2\" onClick={handelLoclick}>covert to lower case</button>\r\n<button className=\"btn btn-primary   mx-2\" onClick={handelClearclick}>clear text</button>\r\n\r\n        </div>\r\n        <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'black'}}> \r\n        <h1>Text summery</h1>\r\n        <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n        <p>{0.008*text.split(\" \").length} minute to read </p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter some text to preview\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const captalized=(word)=>{\r\n\r\n      const  lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        \r\n            \r\n      props.alert&&<div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n <strong>{captalized(props.alert.type)}</strong> : {props.alert.msg}\r\n  \r\n</div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import Navbar from './components/Navbar';\nimport './App.css';\nimport Textform from './components/Textform';\n// import About from './components/About';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import {\n// BrowserRouter as Router,\n// Switch,\n// Route,\n// Link\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setmode] = useState('light')\n  const [alert, setalert] = useState(null)\n\n  const showalert =(message,type) =>{\n    setalert({\n      msg: message,\n      type:type\n    });\n    setTimeout(()=>{\n      setalert(null);\n    },1500);\n\n  }\n  const toggleMode=()=>{\n    if (mode==='light'){\n     setmode('dark') \n     document.body.style.backgroundColor='green'\n     document.title =  'text util- dark mode enable'\n     showalert(\"Dark mode enable\",\"success\")\n    \n    }else{\n       setmode('light')\n       document.body.style.backgroundColor='white'\n       document.title =  'text util- light mode enable'\n       showalert(\"light mode enable\",\"success\")\n      }\n  }\n  return (\n  <>\n  {/* <Router> */}\n\n<Navbar  title =\"text util\" aboutus=\"Aboutus\" mode={mode} toggleMode={toggleMode}/>  \n<Alert alert={alert}/>\n\n<div className=\"container\">\n{/* <Switch> */}\n          {/* <Route exact path=\"/about\"> */}\n            {/* <About /> */}\n          {/* </Route>\n          <Router exact path=\"/\"> */}\n          <Textform showalert={showalert} mode={mode}  heading=\"enter the text to Analyse below\"/>\n          {/* </Router>  */}\n        {/* </Switch>  */}\n{/* <About/> */}\n\n</div>\n{/* </Router> */}\n\n</>\n  \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}