{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","aboutus","onClick","toggleMode","htmlFor","defaultProps","Textform","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newtext","toUpperCase","showalert","toLowerCase","split","length","About","border","mystyle","setStyle","btnText","Alert","alert","role","word","lower","charAt","slice","captalized","msg","App","setmode","setalert","message","setTimeout","document","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ce56d34d.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">{props.aboutus}</Link>\r\n              </li>\r\n             \r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n            </form> */}\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">enable dark mode</label>\r\n</div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\nNavbar.propTypes  = {title : PropTypes.string,\r\n    aboutus : PropTypes.string,\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'set title',\r\n    aboutus:'set about us'\r\n  }","import React,{ useState } from 'react'\r\n  \r\n  \r\n\r\nexport default function Textform(props) {\r\n    const [text, setText] = useState('Enter text here');\r\n\r\n    const handleOnchange = (event) =>{\r\n        \r\n        setText(event.target.value);\r\n\r\n    }\r\n\r\n    const handelUpclick= () =>{\r\n        \r\n        let newtext= text.toUpperCase()\r\n\r\n        setText(newtext)\r\n        props.showalert(\"converted to uppercase\",\"success\")\r\n    }\r\n    const handelClearclick= () =>{\r\n        \r\n        let newtext= ''\r\n\r\n        setText(newtext)\r\n    }\r\n    const handelLoclick= () =>{\r\n        \r\n        let newtext= text.toLowerCase()\r\n\r\n        setText(newtext)\r\n        props.showalert(\"converted to lowercase\",\"success\")\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n            \r\n\r\n            <h1>{props.heading}</h1>\r\n         \r\n<div className=\"mb-3\">\r\n\r\n  <textarea className=\"form-control\" value={text} onChange={handleOnchange} style={{backgroundColor:props.mode==='dark'?'green':'white', color:props.mode==='dark'?'white':'black'}} id=\"mybox\" rows=\"10\"></textarea>\r\n</div> \r\n<button className=\"btn btn-primary  mx-2 \" onClick={handelUpclick}>covert to upper case</button>\r\n<button className=\"btn btn-primary   mx-2\" onClick={handelLoclick}>covert to lower case</button>\r\n<button className=\"btn btn-primary   mx-2\" onClick={handelClearclick}>clear text</button>\r\n\r\n        </div>\r\n        <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'black'}}> \r\n        <h1>Text summery</h1>\r\n        <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n        <p>{0.008*text.split(\" \").length} minute to read </p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter some text to preview\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function About() {\r\n    \r\n    const [mystyle,setStyle]= useState(   { color:'white',\r\n    backgroundColor: 'black',\r\n    border:'1px solid white'\r\n} )\r\nconst [btnText,setText]= useState('enable light mode')\r\nconst toggleStyle=()=>{\r\n    if(mystyle.color==='white'){\r\n        setStyle(\r\n            { color:'black',\r\n            backgroundColor: 'white',\r\n            \r\n        }    \r\n        )\r\n        setText('enable dark mode')\r\n    }\r\n    else{\r\n\r\n        setStyle(\r\n            { color:'white',\r\n            backgroundColor: 'black',\r\n            border:'1px solid white'\r\n        }    \r\n        ) \r\n        setText('enable ligth mode')  \r\n    }\r\n\r\n}\r\n    \r\n    return (\r\n        <div className=\"container\" style={mystyle}>\r\n            <div className=\"accordion\" id=\"accordionExample\">\r\n            <h1>About Us</h1>\r\n  <div className=\"accordion-item\"  style={mystyle}>\r\n    <h2 className=\"accordion-header\" id=\"headingOne\"  >\r\n      <button className=\"accordion-button\" type=\"button\"  style={mystyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n        Accordion Item #1\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\">\r\n        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\" style={mystyle}>\r\n    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n      <button className=\"accordion-button collapsed\" type=\"button\"  style={mystyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n        Accordion Item #2\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\">\r\n        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\"style={mystyle}>\r\n    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n      <button className=\"accordion-button collapsed\" type=\"button\"  style={mystyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n        Accordion Item #3\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\">\r\n        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"container\">\r\n  <button type=\"button\" onClick={toggleStyle} className=\"btn btn-primary  my-3\">{btnText}</button>\r\n\r\n  </div>\r\n  \r\n</div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const captalized=(word)=>{\r\n\r\n      const  lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        \r\n            \r\n      props.alert&&<div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n <strong>{captalized(props.alert.type)}</strong> : {props.alert.msg}\r\n  \r\n</div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import Navbar from './components/Navbar';\nimport './App.css';\nimport Textform from './components/Textform';\nimport About from './components/About';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\nimport {\nBrowserRouter as Router,\nSwitch,\nRoute,\nLink\n} from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setmode] = useState('light')\n  const [alert, setalert] = useState(null)\n\n  const showalert =(message,type) =>{\n    setalert({\n      msg: message,\n      type:type\n    });\n    setTimeout(()=>{\n      setalert(null);\n    },1500);\n\n  }\n  const toggleMode=()=>{\n    if (mode==='light'){\n     setmode('dark') \n     document.body.style.backgroundColor='green'\n     document.title =  'text util- dark mode enable'\n     showalert(\"Dark mode enable\",\"success\")\n    \n    }else{\n       setmode('light')\n       document.body.style.backgroundColor='white'\n       document.title =  'text util- light mode enable'\n       showalert(\"light mode enable\",\"success\")\n      }\n  }\n  return (\n  <>\n  <Router>\n\n<Navbar  title =\"text util\" aboutus=\"Aboutus\" mode={mode} toggleMode={toggleMode}/>  \n<Alert alert={alert}/>\n\n<div className=\"container\">\n<Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Router exact path=\"/\">\n          <Textform showalert={showalert} mode={mode}  heading=\"enter the text to Analyse below\"/>\n          </Router> \n        </Switch> \n{/* <About/> */}\n\n</div>\n</Router>\n\n</>\n  \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}